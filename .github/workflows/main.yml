name: Build

on: [push]

jobs:
  validate-dependencies:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Use Node.js 12.x
      uses: actions/setup-node@v1
      with:
        node-version: '12.x'
    - name: Cache node modules
      uses: actions/cache@v1
      with:
        path: node_modules
        key: ${{ runner.OS }}-audit-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.OS }}-audit-
          ${{ runner.OS }}-
    - name: yarn validate:dependencies
      run: |
        yarn install
        yarn validate:dependencies
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    steps:
    - uses: actions/checkout@v1
    - name: Use Node.js 12.x
      uses: actions/setup-node@v1
      with:
        node-version: 12.x
    - name: Cache node modules
      uses: actions/cache@v1
      # TMP HACK https://github.com/actions/cache/issues/39
      if: runner.os != 'Windows'
      with:
        path: node_modules
        key: ${{ runner.OS }}-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.OS }}-
    - name: Cache node modules
      uses: actions/cache@v1
      # TMP HACK https://github.com/actions/cache/issues/39
      if: runner.os == 'Windows'
      with:
        path: node_modules
        key: ${{ runner.OS }}-${{ hashFiles('**\yarn.lock') }}
        restore-keys: |
          ${{ runner.OS }}-
    - name: tmp
      run: echo ${{ toJson(runner) }}
    - name: yarn install
      run: yarn install
#     - name: yarn test
#       run: |
#         yarn lint || true # TODO - temporary disable
#         yarn test
    - name: yarn build
      run: yarn build-${{ runner.OS }}
    - uses: actions/upload-artifact@master
      with:
        name: ${{ runner.OS }}
        path: dist/*
